name: Github Actions Maven
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Step 1 - Checkout main branch from GitHub
        uses: actions/checkout@v3
      # Install Docker
      - name: Step 2 - Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      # Install JDK 17
      - name: Step 3 - Set up JDK 17
        uses: actions/setup-java@v3.4.0
        with:
          java-version: 17
          distribution: temurin
      # Build maven project
      - name: Step 4 - Build Maven Project
        run: mvn -DskipTests=true -B package --file pom.xml
        env:
          ACCESS_TOKEN: ${{ secrets.GH_PAT_FOR_ACTIONS_TOKEN }}

      - name: Step 5 - Set release version env variable
        run: echo "RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Step 6 - Update version
        run: mvn -B versions:set -DnewVersion={{env.RELEASE_VERSION}} -DgenerateBackupPoms=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Step 7 - Create automatic release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: |
            LICENSE.txt
            *.jar
          title: ${{env.RELEASE_VERSION}}
      - name: Step 7 - Login to OTC
        uses: docker/login-action@v2
        with:
          registry: swr.eu-de.otc.t-systems.com
          username: ${{ secrets.OTC_ACCESS_KEY_ID }}
          password: ${{ secrets.OTC_LOGIN_KEY }}
    
      - name: Step 8 - Docker build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: swr.eu-de.otc.t-systems.com/endoo-gmbh/device-registry:${{env.RELEASE_VERSION}}
